
metr2800-robot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000402  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000038e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000402  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000402  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000434  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000474  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000152c  00000000  00000000  00000524  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b2d  00000000  00000000  00001a50  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008a9  00000000  00000000  0000257d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b8  00000000  00000000  00002e28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b4  00000000  00000000  00002fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a69  00000000  00000000  00003594  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003ffd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__vector_1>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_clear_bss>:
  88:	21 e0       	ldi	r18, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	a2 30       	cpi	r26, 0x02	; 2
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
  98:	0e 94 52 00 	call	0xa4	; 0xa4 <main>
  9c:	0c 94 c5 01 	jmp	0x38a	; 0x38a <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <main>:
  a4:	0e 94 6d 00 	call	0xda	; 0xda <setupDriveTrain>
  a8:	80 e8       	ldi	r24, 0x80	; 128
  aa:	8a b9       	out	0x0a, r24	; 10
  ac:	8b b1       	in	r24, 0x0b	; 11
  ae:	80 58       	subi	r24, 0x80	; 128
  b0:	8b b9       	out	0x0b, r24	; 11
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	92 e0       	ldi	r25, 0x02	; 2
  b6:	0e 94 74 01 	call	0x2e8	; 0x2e8 <rotateCW>
  ba:	0e 94 64 01 	call	0x2c8	; 0x2c8 <powerDownDriveTrain>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	83 ed       	ldi	r24, 0xD3	; 211
  c2:	90 e3       	ldi	r25, 0x30	; 48
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x20>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x2a>
  ce:	00 00       	nop
  d0:	80 e0       	ldi	r24, 0x00	; 0
  d2:	92 e0       	ldi	r25, 0x02	; 2
  d4:	0e 94 8d 01 	call	0x31a	; 0x31a <rotateCCW>
  d8:	e9 cf       	rjmp	.-46     	; 0xac <main+0x8>

000000da <setupDriveTrain>:
  da:	80 ef       	ldi	r24, 0xF0	; 240
  dc:	87 b9       	out	0x07, r24	; 7
  de:	8f e0       	ldi	r24, 0x0F	; 15
  e0:	87 b9       	out	0x07, r24	; 7
  e2:	08 95       	ret

000000e4 <writeStepper>:
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	81 11       	cpse	r24, r1
  ea:	15 c0       	rjmp	.+42     	; 0x116 <writeStepper+0x32>
  ec:	80 e8       	ldi	r24, 0x80	; 128
  ee:	68 9f       	mul	r22, r24
  f0:	b0 01       	movw	r22, r0
  f2:	11 24       	eor	r1, r1
  f4:	80 e4       	ldi	r24, 0x40	; 64
  f6:	48 9f       	mul	r20, r24
  f8:	a0 01       	movw	r20, r0
  fa:	11 24       	eor	r1, r1
  fc:	80 e2       	ldi	r24, 0x20	; 32
  fe:	28 9f       	mul	r18, r24
 100:	90 01       	movw	r18, r0
 102:	11 24       	eor	r1, r1
 104:	80 e1       	ldi	r24, 0x10	; 16
 106:	08 9f       	mul	r16, r24
 108:	80 01       	movw	r16, r0
 10a:	11 24       	eor	r1, r1
 10c:	46 2b       	or	r20, r22
 10e:	24 2b       	or	r18, r20
 110:	20 2b       	or	r18, r16
 112:	28 b9       	out	0x08, r18	; 8
 114:	15 c0       	rjmp	.+42     	; 0x140 <writeStepper+0x5c>
 116:	81 30       	cpi	r24, 0x01	; 1
 118:	99 f4       	brne	.+38     	; 0x140 <writeStepper+0x5c>
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	66 0f       	add	r22, r22
 11e:	77 1f       	adc	r23, r23
 120:	66 0f       	add	r22, r22
 122:	77 1f       	adc	r23, r23
 124:	66 0f       	add	r22, r22
 126:	77 1f       	adc	r23, r23
 128:	50 e0       	ldi	r21, 0x00	; 0
 12a:	44 0f       	add	r20, r20
 12c:	55 1f       	adc	r21, r21
 12e:	44 0f       	add	r20, r20
 130:	55 1f       	adc	r21, r21
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	22 0f       	add	r18, r18
 136:	33 1f       	adc	r19, r19
 138:	46 2b       	or	r20, r22
 13a:	24 2b       	or	r18, r20
 13c:	20 2b       	or	r18, r16
 13e:	28 b9       	out	0x08, r18	; 8
 140:	1f 91       	pop	r17
 142:	0f 91       	pop	r16
 144:	08 95       	ret

00000146 <onestep>:
 146:	0f 93       	push	r16
 148:	cf 93       	push	r28
 14a:	c8 2f       	mov	r28, r24
 14c:	61 30       	cpi	r22, 0x01	; 1
 14e:	09 f0       	breq	.+2      	; 0x152 <onestep+0xc>
 150:	5b c0       	rjmp	.+182    	; 0x208 <onestep+0xc2>
 152:	00 e0       	ldi	r16, 0x00	; 0
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	40 e0       	ldi	r20, 0x00	; 0
 158:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 15c:	8f e3       	ldi	r24, 0x3F	; 63
 15e:	9f e1       	ldi	r25, 0x1F	; 31
 160:	01 97       	sbiw	r24, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <onestep+0x1a>
 164:	00 c0       	rjmp	.+0      	; 0x166 <onestep+0x20>
 166:	00 00       	nop
 168:	20 e0       	ldi	r18, 0x00	; 0
 16a:	41 e0       	ldi	r20, 0x01	; 1
 16c:	61 e0       	ldi	r22, 0x01	; 1
 16e:	8c 2f       	mov	r24, r28
 170:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 174:	8f e3       	ldi	r24, 0x3F	; 63
 176:	9f e1       	ldi	r25, 0x1F	; 31
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <onestep+0x32>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <onestep+0x38>
 17e:	00 00       	nop
 180:	20 e0       	ldi	r18, 0x00	; 0
 182:	41 e0       	ldi	r20, 0x01	; 1
 184:	60 e0       	ldi	r22, 0x00	; 0
 186:	8c 2f       	mov	r24, r28
 188:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 18c:	8f e3       	ldi	r24, 0x3F	; 63
 18e:	9f e1       	ldi	r25, 0x1F	; 31
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <onestep+0x4a>
 194:	00 c0       	rjmp	.+0      	; 0x196 <onestep+0x50>
 196:	00 00       	nop
 198:	21 e0       	ldi	r18, 0x01	; 1
 19a:	41 e0       	ldi	r20, 0x01	; 1
 19c:	60 e0       	ldi	r22, 0x00	; 0
 19e:	8c 2f       	mov	r24, r28
 1a0:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 1a4:	8f e3       	ldi	r24, 0x3F	; 63
 1a6:	9f e1       	ldi	r25, 0x1F	; 31
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <onestep+0x62>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <onestep+0x68>
 1ae:	00 00       	nop
 1b0:	21 e0       	ldi	r18, 0x01	; 1
 1b2:	40 e0       	ldi	r20, 0x00	; 0
 1b4:	60 e0       	ldi	r22, 0x00	; 0
 1b6:	8c 2f       	mov	r24, r28
 1b8:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 1bc:	8f e3       	ldi	r24, 0x3F	; 63
 1be:	9f e1       	ldi	r25, 0x1F	; 31
 1c0:	01 97       	sbiw	r24, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <onestep+0x7a>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <onestep+0x80>
 1c6:	00 00       	nop
 1c8:	01 e0       	ldi	r16, 0x01	; 1
 1ca:	21 e0       	ldi	r18, 0x01	; 1
 1cc:	40 e0       	ldi	r20, 0x00	; 0
 1ce:	60 e0       	ldi	r22, 0x00	; 0
 1d0:	8c 2f       	mov	r24, r28
 1d2:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 1d6:	8f e3       	ldi	r24, 0x3F	; 63
 1d8:	9f e1       	ldi	r25, 0x1F	; 31
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	f1 f7       	brne	.-4      	; 0x1da <onestep+0x94>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <onestep+0x9a>
 1e0:	00 00       	nop
 1e2:	20 e0       	ldi	r18, 0x00	; 0
 1e4:	40 e0       	ldi	r20, 0x00	; 0
 1e6:	60 e0       	ldi	r22, 0x00	; 0
 1e8:	8c 2f       	mov	r24, r28
 1ea:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 1ee:	8f e3       	ldi	r24, 0x3F	; 63
 1f0:	9f e1       	ldi	r25, 0x1F	; 31
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <onestep+0xac>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <onestep+0xb2>
 1f8:	00 00       	nop
 1fa:	20 e0       	ldi	r18, 0x00	; 0
 1fc:	40 e0       	ldi	r20, 0x00	; 0
 1fe:	61 e0       	ldi	r22, 0x01	; 1
 200:	8c 2f       	mov	r24, r28
 202:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 206:	5d c0       	rjmp	.+186    	; 0x2c2 <onestep+0x17c>
 208:	61 11       	cpse	r22, r1
 20a:	5b c0       	rjmp	.+182    	; 0x2c2 <onestep+0x17c>
 20c:	01 e0       	ldi	r16, 0x01	; 1
 20e:	20 e0       	ldi	r18, 0x00	; 0
 210:	40 e0       	ldi	r20, 0x00	; 0
 212:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 216:	8f e3       	ldi	r24, 0x3F	; 63
 218:	9f e1       	ldi	r25, 0x1F	; 31
 21a:	01 97       	sbiw	r24, 0x01	; 1
 21c:	f1 f7       	brne	.-4      	; 0x21a <onestep+0xd4>
 21e:	00 c0       	rjmp	.+0      	; 0x220 <onestep+0xda>
 220:	00 00       	nop
 222:	21 e0       	ldi	r18, 0x01	; 1
 224:	40 e0       	ldi	r20, 0x00	; 0
 226:	60 e0       	ldi	r22, 0x00	; 0
 228:	8c 2f       	mov	r24, r28
 22a:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 22e:	8f e3       	ldi	r24, 0x3F	; 63
 230:	9f e1       	ldi	r25, 0x1F	; 31
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <onestep+0xec>
 236:	00 c0       	rjmp	.+0      	; 0x238 <onestep+0xf2>
 238:	00 00       	nop
 23a:	00 e0       	ldi	r16, 0x00	; 0
 23c:	21 e0       	ldi	r18, 0x01	; 1
 23e:	40 e0       	ldi	r20, 0x00	; 0
 240:	60 e0       	ldi	r22, 0x00	; 0
 242:	8c 2f       	mov	r24, r28
 244:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 248:	8f e3       	ldi	r24, 0x3F	; 63
 24a:	9f e1       	ldi	r25, 0x1F	; 31
 24c:	01 97       	sbiw	r24, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <onestep+0x106>
 250:	00 c0       	rjmp	.+0      	; 0x252 <onestep+0x10c>
 252:	00 00       	nop
 254:	21 e0       	ldi	r18, 0x01	; 1
 256:	41 e0       	ldi	r20, 0x01	; 1
 258:	60 e0       	ldi	r22, 0x00	; 0
 25a:	8c 2f       	mov	r24, r28
 25c:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 260:	8f e3       	ldi	r24, 0x3F	; 63
 262:	9f e1       	ldi	r25, 0x1F	; 31
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	f1 f7       	brne	.-4      	; 0x264 <onestep+0x11e>
 268:	00 c0       	rjmp	.+0      	; 0x26a <onestep+0x124>
 26a:	00 00       	nop
 26c:	20 e0       	ldi	r18, 0x00	; 0
 26e:	41 e0       	ldi	r20, 0x01	; 1
 270:	60 e0       	ldi	r22, 0x00	; 0
 272:	8c 2f       	mov	r24, r28
 274:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 278:	8f e3       	ldi	r24, 0x3F	; 63
 27a:	9f e1       	ldi	r25, 0x1F	; 31
 27c:	01 97       	sbiw	r24, 0x01	; 1
 27e:	f1 f7       	brne	.-4      	; 0x27c <onestep+0x136>
 280:	00 c0       	rjmp	.+0      	; 0x282 <onestep+0x13c>
 282:	00 00       	nop
 284:	20 e0       	ldi	r18, 0x00	; 0
 286:	41 e0       	ldi	r20, 0x01	; 1
 288:	61 e0       	ldi	r22, 0x01	; 1
 28a:	8c 2f       	mov	r24, r28
 28c:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 290:	8f e3       	ldi	r24, 0x3F	; 63
 292:	9f e1       	ldi	r25, 0x1F	; 31
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <onestep+0x14e>
 298:	00 c0       	rjmp	.+0      	; 0x29a <onestep+0x154>
 29a:	00 00       	nop
 29c:	20 e0       	ldi	r18, 0x00	; 0
 29e:	40 e0       	ldi	r20, 0x00	; 0
 2a0:	61 e0       	ldi	r22, 0x01	; 1
 2a2:	8c 2f       	mov	r24, r28
 2a4:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 2a8:	8f e3       	ldi	r24, 0x3F	; 63
 2aa:	9f e1       	ldi	r25, 0x1F	; 31
 2ac:	01 97       	sbiw	r24, 0x01	; 1
 2ae:	f1 f7       	brne	.-4      	; 0x2ac <onestep+0x166>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <onestep+0x16c>
 2b2:	00 00       	nop
 2b4:	01 e0       	ldi	r16, 0x01	; 1
 2b6:	20 e0       	ldi	r18, 0x00	; 0
 2b8:	40 e0       	ldi	r20, 0x00	; 0
 2ba:	61 e0       	ldi	r22, 0x01	; 1
 2bc:	8c 2f       	mov	r24, r28
 2be:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 2c2:	cf 91       	pop	r28
 2c4:	0f 91       	pop	r16
 2c6:	08 95       	ret

000002c8 <powerDownDriveTrain>:
 2c8:	0f 93       	push	r16
 2ca:	00 e0       	ldi	r16, 0x00	; 0
 2cc:	20 e0       	ldi	r18, 0x00	; 0
 2ce:	40 e0       	ldi	r20, 0x00	; 0
 2d0:	60 e0       	ldi	r22, 0x00	; 0
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 2d8:	20 e0       	ldi	r18, 0x00	; 0
 2da:	40 e0       	ldi	r20, 0x00	; 0
 2dc:	60 e0       	ldi	r22, 0x00	; 0
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	0e 94 72 00 	call	0xe4	; 0xe4 <writeStepper>
 2e4:	0f 91       	pop	r16
 2e6:	08 95       	ret

000002e8 <rotateCW>:
 2e8:	0f 93       	push	r16
 2ea:	1f 93       	push	r17
 2ec:	cf 93       	push	r28
 2ee:	df 93       	push	r29
 2f0:	8c 01       	movw	r16, r24
 2f2:	c0 e0       	ldi	r28, 0x00	; 0
 2f4:	d0 e0       	ldi	r29, 0x00	; 0
 2f6:	09 c0       	rjmp	.+18     	; 0x30a <rotateCW+0x22>
 2f8:	61 e0       	ldi	r22, 0x01	; 1
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	0e 94 a3 00 	call	0x146	; 0x146 <onestep>
 300:	60 e0       	ldi	r22, 0x00	; 0
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	0e 94 a3 00 	call	0x146	; 0x146 <onestep>
 308:	21 96       	adiw	r28, 0x01	; 1
 30a:	c0 17       	cp	r28, r16
 30c:	d1 07       	cpc	r29, r17
 30e:	a0 f3       	brcs	.-24     	; 0x2f8 <rotateCW+0x10>
 310:	df 91       	pop	r29
 312:	cf 91       	pop	r28
 314:	1f 91       	pop	r17
 316:	0f 91       	pop	r16
 318:	08 95       	ret

0000031a <rotateCCW>:
 31a:	0f 93       	push	r16
 31c:	1f 93       	push	r17
 31e:	cf 93       	push	r28
 320:	df 93       	push	r29
 322:	8c 01       	movw	r16, r24
 324:	c0 e0       	ldi	r28, 0x00	; 0
 326:	d0 e0       	ldi	r29, 0x00	; 0
 328:	09 c0       	rjmp	.+18     	; 0x33c <rotateCCW+0x22>
 32a:	60 e0       	ldi	r22, 0x00	; 0
 32c:	80 e0       	ldi	r24, 0x00	; 0
 32e:	0e 94 a3 00 	call	0x146	; 0x146 <onestep>
 332:	61 e0       	ldi	r22, 0x01	; 1
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	0e 94 a3 00 	call	0x146	; 0x146 <onestep>
 33a:	21 96       	adiw	r28, 0x01	; 1
 33c:	c0 17       	cp	r28, r16
 33e:	d1 07       	cpc	r29, r17
 340:	a0 f3       	brcs	.-24     	; 0x32a <rotateCCW+0x10>
 342:	df 91       	pop	r29
 344:	cf 91       	pop	r28
 346:	1f 91       	pop	r17
 348:	0f 91       	pop	r16
 34a:	08 95       	ret

0000034c <__vector_1>:
	
	return 0.000004 * hc_sr04_cnt/2 * 34300;
}

/*Measures time from trigger to echo of either of the ultrasonic sensors. */
ISR(INT0_vect) {
 34c:	1f 92       	push	r1
 34e:	0f 92       	push	r0
 350:	0f b6       	in	r0, 0x3f	; 63
 352:	0f 92       	push	r0
 354:	11 24       	eor	r1, r1
 356:	8f 93       	push	r24
 358:	9f 93       	push	r25
	if (PIND & (1<<1) || PIND & (1<<0)) {
 35a:	49 99       	sbic	0x09, 1	; 9
 35c:	02 c0       	rjmp	.+4      	; 0x362 <__vector_1+0x16>
 35e:	48 9b       	sbis	0x09, 0	; 9
 360:	05 c0       	rjmp	.+10     	; 0x36c <__vector_1+0x20>
		TCNT1 = 0;
 362:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 366:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 36a:	08 c0       	rjmp	.+16     	; 0x37c <__vector_1+0x30>
		} else {
		hc_sr04_cnt = TCNT1;
 36c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 370:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 374:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 378:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
}
 37c:	9f 91       	pop	r25
 37e:	8f 91       	pop	r24
 380:	0f 90       	pop	r0
 382:	0f be       	out	0x3f, r0	; 63
 384:	0f 90       	pop	r0
 386:	1f 90       	pop	r1
 388:	18 95       	reti

0000038a <_exit>:
 38a:	f8 94       	cli

0000038c <__stop_program>:
 38c:	ff cf       	rjmp	.-2      	; 0x38c <__stop_program>
