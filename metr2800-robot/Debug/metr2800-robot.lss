
metr2800-robot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000848  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007d4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008c  00800100  00800100  00000848  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000848  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000878  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  000008b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002693  00000000  00000000  00000a30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d14  00000000  00000000  000030c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f1c  00000000  00000000  00003dd7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004ac  00000000  00000000  00004cf4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000839  00000000  00000000  000051a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001368  00000000  00000000  000059d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00006d41  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <__vector_1>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 14 02 	jmp	0x428	; 0x428 <__vector_20>
  54:	0c 94 42 02 	jmp	0x484	; 0x484 <__vector_21>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 6c 02 	jmp	0x4d8	; 0x4d8 <__vector_28>
  74:	0c 94 9a 02 	jmp	0x534	; 0x534 <__vector_29>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e4 ed       	ldi	r30, 0xD4	; 212
  90:	f7 e0       	ldi	r31, 0x07	; 7
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a0 30       	cpi	r26, 0x00	; 0
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	a0 e0       	ldi	r26, 0x00	; 0
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	ac 38       	cpi	r26, 0x8C	; 140
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 7c 00 	call	0xf8	; 0xf8 <main>
  b2:	0c 94 e8 03 	jmp	0x7d0	; 0x7d0 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <turretCode>:
  ba:	0e 94 ae 00 	call	0x15c	; 0x15c <setupDriveTrain>
  be:	61 e0       	ldi	r22, 0x01	; 1
  c0:	86 e9       	ldi	r24, 0x96	; 150
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0e 94 c3 01 	call	0x386	; 0x386 <rotateCW>
  c8:	2f ef       	ldi	r18, 0xFF	; 255
  ca:	83 ed       	ldi	r24, 0xD3	; 211
  cc:	90 e3       	ldi	r25, 0x30	; 48
  ce:	21 50       	subi	r18, 0x01	; 1
  d0:	80 40       	sbci	r24, 0x00	; 0
  d2:	90 40       	sbci	r25, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <turretCode+0x14>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <turretCode+0x1e>
  d8:	00 00       	nop
  da:	61 e0       	ldi	r22, 0x01	; 1
  dc:	86 e9       	ldi	r24, 0x96	; 150
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <rotateCCW>
  e4:	2f ef       	ldi	r18, 0xFF	; 255
  e6:	83 ed       	ldi	r24, 0xD3	; 211
  e8:	90 e3       	ldi	r25, 0x30	; 48
  ea:	21 50       	subi	r18, 0x01	; 1
  ec:	80 40       	sbci	r24, 0x00	; 0
  ee:	90 40       	sbci	r25, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <turretCode+0x30>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <turretCode+0x3a>
  f4:	00 00       	nop
  f6:	e3 cf       	rjmp	.-58     	; 0xbe <turretCode+0x4>

000000f8 <main>:
  f8:	78 94       	sei
  fa:	0e 94 5d 00 	call	0xba	; 0xba <turretCode>

000000fe <var_delay>:

void backwardStep(uint16_t dist, uint8_t speed) {
	for (uint16_t i = 0; i < dist; i++) {
		parallelStep(BACKWARD, speed);
	}
}
  fe:	8f 92       	push	r8
 100:	9f 92       	push	r9
 102:	af 92       	push	r10
 104:	bf 92       	push	r11
 106:	cf 92       	push	r12
 108:	df 92       	push	r13
 10a:	ef 92       	push	r14
 10c:	ff 92       	push	r15
 10e:	4b 01       	movw	r8, r22
 110:	5c 01       	movw	r10, r24
 112:	c1 2c       	mov	r12, r1
 114:	d1 2c       	mov	r13, r1
 116:	76 01       	movw	r14, r12
 118:	10 c0       	rjmp	.+32     	; 0x13a <var_delay+0x3c>
 11a:	8f e9       	ldi	r24, 0x9F	; 159
 11c:	9f e0       	ldi	r25, 0x0F	; 15
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <var_delay+0x20>
 122:	00 c0       	rjmp	.+0      	; 0x124 <var_delay+0x26>
 124:	00 00       	nop
 126:	20 e0       	ldi	r18, 0x00	; 0
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	40 e8       	ldi	r20, 0x80	; 128
 12c:	5f e3       	ldi	r21, 0x3F	; 63
 12e:	c7 01       	movw	r24, r14
 130:	b6 01       	movw	r22, r12
 132:	0e 94 c5 02 	call	0x58a	; 0x58a <__addsf3>
 136:	6b 01       	movw	r12, r22
 138:	7c 01       	movw	r14, r24
 13a:	a5 01       	movw	r20, r10
 13c:	94 01       	movw	r18, r8
 13e:	c7 01       	movw	r24, r14
 140:	b6 01       	movw	r22, r12
 142:	0e 94 31 03 	call	0x662	; 0x662 <__cmpsf2>
 146:	88 23       	and	r24, r24
 148:	44 f3       	brlt	.-48     	; 0x11a <var_delay+0x1c>
 14a:	ff 90       	pop	r15
 14c:	ef 90       	pop	r14
 14e:	df 90       	pop	r13
 150:	cf 90       	pop	r12
 152:	bf 90       	pop	r11
 154:	af 90       	pop	r10
 156:	9f 90       	pop	r9
 158:	8f 90       	pop	r8
 15a:	08 95       	ret

0000015c <setupDriveTrain>:
 15c:	87 b1       	in	r24, 0x07	; 7
 15e:	80 6f       	ori	r24, 0xF0	; 240
 160:	87 b9       	out	0x07, r24	; 7
 162:	87 b1       	in	r24, 0x07	; 7
 164:	8f 60       	ori	r24, 0x0F	; 15
 166:	87 b9       	out	0x07, r24	; 7
 168:	84 b1       	in	r24, 0x04	; 4
 16a:	8f 60       	ori	r24, 0x0F	; 15
 16c:	84 b9       	out	0x04, r24	; 4
 16e:	08 95       	ret

00000170 <writeStepper>:
 170:	0f 93       	push	r16
 172:	1f 93       	push	r17
 174:	81 11       	cpse	r24, r1
 176:	18 c0       	rjmp	.+48     	; 0x1a8 <writeStepper+0x38>
 178:	88 b1       	in	r24, 0x08	; 8
 17a:	90 e8       	ldi	r25, 0x80	; 128
 17c:	69 9f       	mul	r22, r25
 17e:	b0 01       	movw	r22, r0
 180:	11 24       	eor	r1, r1
 182:	90 e4       	ldi	r25, 0x40	; 64
 184:	49 9f       	mul	r20, r25
 186:	a0 01       	movw	r20, r0
 188:	11 24       	eor	r1, r1
 18a:	90 e2       	ldi	r25, 0x20	; 32
 18c:	29 9f       	mul	r18, r25
 18e:	90 01       	movw	r18, r0
 190:	11 24       	eor	r1, r1
 192:	90 e1       	ldi	r25, 0x10	; 16
 194:	09 9f       	mul	r16, r25
 196:	80 01       	movw	r16, r0
 198:	11 24       	eor	r1, r1
 19a:	8f 70       	andi	r24, 0x0F	; 15
 19c:	68 2b       	or	r22, r24
 19e:	46 2b       	or	r20, r22
 1a0:	24 2b       	or	r18, r20
 1a2:	20 2b       	or	r18, r16
 1a4:	28 b9       	out	0x08, r18	; 8
 1a6:	32 c0       	rjmp	.+100    	; 0x20c <writeStepper+0x9c>
 1a8:	81 30       	cpi	r24, 0x01	; 1
 1aa:	c1 f4       	brne	.+48     	; 0x1dc <writeStepper+0x6c>
 1ac:	88 b1       	in	r24, 0x08	; 8
 1ae:	70 e0       	ldi	r23, 0x00	; 0
 1b0:	66 0f       	add	r22, r22
 1b2:	77 1f       	adc	r23, r23
 1b4:	66 0f       	add	r22, r22
 1b6:	77 1f       	adc	r23, r23
 1b8:	66 0f       	add	r22, r22
 1ba:	77 1f       	adc	r23, r23
 1bc:	50 e0       	ldi	r21, 0x00	; 0
 1be:	44 0f       	add	r20, r20
 1c0:	55 1f       	adc	r21, r21
 1c2:	44 0f       	add	r20, r20
 1c4:	55 1f       	adc	r21, r21
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	22 0f       	add	r18, r18
 1ca:	33 1f       	adc	r19, r19
 1cc:	80 7f       	andi	r24, 0xF0	; 240
 1ce:	86 2b       	or	r24, r22
 1d0:	84 2b       	or	r24, r20
 1d2:	82 2b       	or	r24, r18
 1d4:	28 2f       	mov	r18, r24
 1d6:	20 2b       	or	r18, r16
 1d8:	28 b9       	out	0x08, r18	; 8
 1da:	18 c0       	rjmp	.+48     	; 0x20c <writeStepper+0x9c>
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	b1 f4       	brne	.+44     	; 0x20c <writeStepper+0x9c>
 1e0:	85 b1       	in	r24, 0x05	; 5
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	66 0f       	add	r22, r22
 1e6:	77 1f       	adc	r23, r23
 1e8:	66 0f       	add	r22, r22
 1ea:	77 1f       	adc	r23, r23
 1ec:	66 0f       	add	r22, r22
 1ee:	77 1f       	adc	r23, r23
 1f0:	50 e0       	ldi	r21, 0x00	; 0
 1f2:	44 0f       	add	r20, r20
 1f4:	55 1f       	adc	r21, r21
 1f6:	44 0f       	add	r20, r20
 1f8:	55 1f       	adc	r21, r21
 1fa:	30 e0       	ldi	r19, 0x00	; 0
 1fc:	22 0f       	add	r18, r18
 1fe:	33 1f       	adc	r19, r19
 200:	80 7f       	andi	r24, 0xF0	; 240
 202:	68 2b       	or	r22, r24
 204:	46 2b       	or	r20, r22
 206:	24 2b       	or	r18, r20
 208:	20 2b       	or	r18, r16
 20a:	25 b9       	out	0x05, r18	; 5
 20c:	1f 91       	pop	r17
 20e:	0f 91       	pop	r16
 210:	08 95       	ret

00000212 <onestep>:
 212:	cf 92       	push	r12
 214:	df 92       	push	r13
 216:	ef 92       	push	r14
 218:	ff 92       	push	r15
 21a:	0f 93       	push	r16
 21c:	cf 93       	push	r28
 21e:	c8 2f       	mov	r28, r24
 220:	f4 2e       	mov	r15, r20
 222:	61 30       	cpi	r22, 0x01	; 1
 224:	09 f0       	breq	.+2      	; 0x228 <onestep+0x16>
 226:	53 c0       	rjmp	.+166    	; 0x2ce <onestep+0xbc>
 228:	00 e0       	ldi	r16, 0x00	; 0
 22a:	20 e0       	ldi	r18, 0x00	; 0
 22c:	40 e0       	ldi	r20, 0x00	; 0
 22e:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 232:	6f 2d       	mov	r22, r15
 234:	70 e0       	ldi	r23, 0x00	; 0
 236:	80 e0       	ldi	r24, 0x00	; 0
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 36 03 	call	0x66c	; 0x66c <__floatunsisf>
 23e:	6b 01       	movw	r12, r22
 240:	7c 01       	movw	r14, r24
 242:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 246:	20 e0       	ldi	r18, 0x00	; 0
 248:	41 e0       	ldi	r20, 0x01	; 1
 24a:	61 e0       	ldi	r22, 0x01	; 1
 24c:	8c 2f       	mov	r24, r28
 24e:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 252:	c7 01       	movw	r24, r14
 254:	b6 01       	movw	r22, r12
 256:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 25a:	20 e0       	ldi	r18, 0x00	; 0
 25c:	41 e0       	ldi	r20, 0x01	; 1
 25e:	60 e0       	ldi	r22, 0x00	; 0
 260:	8c 2f       	mov	r24, r28
 262:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 266:	c7 01       	movw	r24, r14
 268:	b6 01       	movw	r22, r12
 26a:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 26e:	21 e0       	ldi	r18, 0x01	; 1
 270:	41 e0       	ldi	r20, 0x01	; 1
 272:	60 e0       	ldi	r22, 0x00	; 0
 274:	8c 2f       	mov	r24, r28
 276:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 27a:	c7 01       	movw	r24, r14
 27c:	b6 01       	movw	r22, r12
 27e:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 282:	21 e0       	ldi	r18, 0x01	; 1
 284:	40 e0       	ldi	r20, 0x00	; 0
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	8c 2f       	mov	r24, r28
 28a:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 28e:	c7 01       	movw	r24, r14
 290:	b6 01       	movw	r22, r12
 292:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 296:	01 e0       	ldi	r16, 0x01	; 1
 298:	21 e0       	ldi	r18, 0x01	; 1
 29a:	40 e0       	ldi	r20, 0x00	; 0
 29c:	60 e0       	ldi	r22, 0x00	; 0
 29e:	8c 2f       	mov	r24, r28
 2a0:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 2a4:	c7 01       	movw	r24, r14
 2a6:	b6 01       	movw	r22, r12
 2a8:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 2ac:	20 e0       	ldi	r18, 0x00	; 0
 2ae:	40 e0       	ldi	r20, 0x00	; 0
 2b0:	60 e0       	ldi	r22, 0x00	; 0
 2b2:	8c 2f       	mov	r24, r28
 2b4:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 2b8:	c7 01       	movw	r24, r14
 2ba:	b6 01       	movw	r22, r12
 2bc:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 2c0:	20 e0       	ldi	r18, 0x00	; 0
 2c2:	40 e0       	ldi	r20, 0x00	; 0
 2c4:	61 e0       	ldi	r22, 0x01	; 1
 2c6:	8c 2f       	mov	r24, r28
 2c8:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 2cc:	55 c0       	rjmp	.+170    	; 0x378 <onestep+0x166>
 2ce:	61 11       	cpse	r22, r1
 2d0:	53 c0       	rjmp	.+166    	; 0x378 <onestep+0x166>
 2d2:	01 e0       	ldi	r16, 0x01	; 1
 2d4:	20 e0       	ldi	r18, 0x00	; 0
 2d6:	40 e0       	ldi	r20, 0x00	; 0
 2d8:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 2dc:	6f 2d       	mov	r22, r15
 2de:	70 e0       	ldi	r23, 0x00	; 0
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	0e 94 36 03 	call	0x66c	; 0x66c <__floatunsisf>
 2e8:	6b 01       	movw	r12, r22
 2ea:	7c 01       	movw	r14, r24
 2ec:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 2f0:	21 e0       	ldi	r18, 0x01	; 1
 2f2:	40 e0       	ldi	r20, 0x00	; 0
 2f4:	60 e0       	ldi	r22, 0x00	; 0
 2f6:	8c 2f       	mov	r24, r28
 2f8:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 2fc:	c7 01       	movw	r24, r14
 2fe:	b6 01       	movw	r22, r12
 300:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 304:	00 e0       	ldi	r16, 0x00	; 0
 306:	21 e0       	ldi	r18, 0x01	; 1
 308:	40 e0       	ldi	r20, 0x00	; 0
 30a:	60 e0       	ldi	r22, 0x00	; 0
 30c:	8c 2f       	mov	r24, r28
 30e:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 312:	c7 01       	movw	r24, r14
 314:	b6 01       	movw	r22, r12
 316:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 31a:	21 e0       	ldi	r18, 0x01	; 1
 31c:	41 e0       	ldi	r20, 0x01	; 1
 31e:	60 e0       	ldi	r22, 0x00	; 0
 320:	8c 2f       	mov	r24, r28
 322:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 326:	c7 01       	movw	r24, r14
 328:	b6 01       	movw	r22, r12
 32a:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 32e:	20 e0       	ldi	r18, 0x00	; 0
 330:	41 e0       	ldi	r20, 0x01	; 1
 332:	60 e0       	ldi	r22, 0x00	; 0
 334:	8c 2f       	mov	r24, r28
 336:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 33a:	c7 01       	movw	r24, r14
 33c:	b6 01       	movw	r22, r12
 33e:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 342:	20 e0       	ldi	r18, 0x00	; 0
 344:	41 e0       	ldi	r20, 0x01	; 1
 346:	61 e0       	ldi	r22, 0x01	; 1
 348:	8c 2f       	mov	r24, r28
 34a:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 34e:	c7 01       	movw	r24, r14
 350:	b6 01       	movw	r22, r12
 352:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 356:	20 e0       	ldi	r18, 0x00	; 0
 358:	40 e0       	ldi	r20, 0x00	; 0
 35a:	61 e0       	ldi	r22, 0x01	; 1
 35c:	8c 2f       	mov	r24, r28
 35e:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 362:	c7 01       	movw	r24, r14
 364:	b6 01       	movw	r22, r12
 366:	0e 94 7f 00 	call	0xfe	; 0xfe <var_delay>
 36a:	01 e0       	ldi	r16, 0x01	; 1
 36c:	20 e0       	ldi	r18, 0x00	; 0
 36e:	40 e0       	ldi	r20, 0x00	; 0
 370:	61 e0       	ldi	r22, 0x01	; 1
 372:	8c 2f       	mov	r24, r28
 374:	0e 94 b8 00 	call	0x170	; 0x170 <writeStepper>
 378:	cf 91       	pop	r28
 37a:	0f 91       	pop	r16
 37c:	ff 90       	pop	r15
 37e:	ef 90       	pop	r14
 380:	df 90       	pop	r13
 382:	cf 90       	pop	r12
 384:	08 95       	ret

00000386 <rotateCW>:


// Only coded for turret right now
void rotateCW(uint16_t angle, uint8_t speed) {
 386:	ff 92       	push	r15
 388:	0f 93       	push	r16
 38a:	1f 93       	push	r17
 38c:	cf 93       	push	r28
 38e:	df 93       	push	r29
 390:	8c 01       	movw	r16, r24
 392:	f6 2e       	mov	r15, r22
	for (int i = 0; i < angle; i++) {
 394:	c0 e0       	ldi	r28, 0x00	; 0
 396:	d0 e0       	ldi	r29, 0x00	; 0
 398:	06 c0       	rjmp	.+12     	; 0x3a6 <rotateCW+0x20>
		onestep(TURRET_STEPPER, FORWARD, speed);
 39a:	4f 2d       	mov	r20, r15
 39c:	61 e0       	ldi	r22, 0x01	; 1
 39e:	82 e0       	ldi	r24, 0x02	; 2
 3a0:	0e 94 09 01 	call	0x212	; 0x212 <onestep>
}


// Only coded for turret right now
void rotateCW(uint16_t angle, uint8_t speed) {
	for (int i = 0; i < angle; i++) {
 3a4:	21 96       	adiw	r28, 0x01	; 1
 3a6:	c0 17       	cp	r28, r16
 3a8:	d1 07       	cpc	r29, r17
 3aa:	b8 f3       	brcs	.-18     	; 0x39a <rotateCW+0x14>
		onestep(TURRET_STEPPER, FORWARD, speed);
		//onestep(L_STEPPER, FORWARD, speed);
		//onestep(R_STEPPER, BACKWARD, speed);
	}
}
 3ac:	df 91       	pop	r29
 3ae:	cf 91       	pop	r28
 3b0:	1f 91       	pop	r17
 3b2:	0f 91       	pop	r16
 3b4:	ff 90       	pop	r15
 3b6:	08 95       	ret

000003b8 <rotateCCW>:

// Only coded for turret right now
void rotateCCW(uint16_t angle, uint8_t speed) {
 3b8:	ff 92       	push	r15
 3ba:	0f 93       	push	r16
 3bc:	1f 93       	push	r17
 3be:	cf 93       	push	r28
 3c0:	df 93       	push	r29
 3c2:	8c 01       	movw	r16, r24
 3c4:	f6 2e       	mov	r15, r22
	for (int i = 0; i < angle; i++) {
 3c6:	c0 e0       	ldi	r28, 0x00	; 0
 3c8:	d0 e0       	ldi	r29, 0x00	; 0
 3ca:	06 c0       	rjmp	.+12     	; 0x3d8 <rotateCCW+0x20>
		onestep(TURRET_STEPPER, BACKWARD, speed);
 3cc:	4f 2d       	mov	r20, r15
 3ce:	60 e0       	ldi	r22, 0x00	; 0
 3d0:	82 e0       	ldi	r24, 0x02	; 2
 3d2:	0e 94 09 01 	call	0x212	; 0x212 <onestep>
	}
}

// Only coded for turret right now
void rotateCCW(uint16_t angle, uint8_t speed) {
	for (int i = 0; i < angle; i++) {
 3d6:	21 96       	adiw	r28, 0x01	; 1
 3d8:	c0 17       	cp	r28, r16
 3da:	d1 07       	cpc	r29, r17
 3dc:	b8 f3       	brcs	.-18     	; 0x3cc <rotateCCW+0x14>
		onestep(TURRET_STEPPER, BACKWARD, speed);
		//onestep(L_STEPPER, BACKWARD, speed);
		//onestep(R_STEPPER, FORWARD, speed);
	}
 3de:	df 91       	pop	r29
 3e0:	cf 91       	pop	r28
 3e2:	1f 91       	pop	r17
 3e4:	0f 91       	pop	r16
 3e6:	ff 90       	pop	r15
 3e8:	08 95       	ret

000003ea <__vector_1>:
 3ea:	1f 92       	push	r1
 3ec:	0f 92       	push	r0
 3ee:	0f b6       	in	r0, 0x3f	; 63
 3f0:	0f 92       	push	r0
 3f2:	11 24       	eor	r1, r1
 3f4:	8f 93       	push	r24
 3f6:	9f 93       	push	r25
 3f8:	4a 99       	sbic	0x09, 2	; 9
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fc:	4a 9b       	sbis	0x09, 2	; 9
 3fe:	05 c0       	rjmp	.+10     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 400:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 404:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 408:	08 c0       	rjmp	.+16     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 40a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 40e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 412:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <hc_sr04_cnt+0x1>
 416:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <hc_sr04_cnt>
 41a:	9f 91       	pop	r25
 41c:	8f 91       	pop	r24
 41e:	0f 90       	pop	r0
 420:	0f be       	out	0x3f, r0	; 63
 422:	0f 90       	pop	r0
 424:	1f 90       	pop	r1
 426:	18 95       	reti

00000428 <__vector_20>:
 428:	1f 92       	push	r1
 42a:	0f 92       	push	r0
 42c:	0f b6       	in	r0, 0x3f	; 63
 42e:	0f 92       	push	r0
 430:	11 24       	eor	r1, r1
 432:	2f 93       	push	r18
 434:	8f 93       	push	r24
 436:	9f 93       	push	r25
 438:	ef 93       	push	r30
 43a:	ff 93       	push	r31
 43c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 440:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 444:	8c 71       	andi	r24, 0x1C	; 28
 446:	e0 91 47 01 	lds	r30, 0x0147	; 0x800147 <UART_RxHead>
 44a:	ef 5f       	subi	r30, 0xFF	; 255
 44c:	ef 71       	andi	r30, 0x1F	; 31
 44e:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <UART_RxTail>
 452:	e9 17       	cp	r30, r25
 454:	39 f0       	breq	.+14     	; 0x464 <__vector_20+0x3c>
 456:	e0 93 47 01 	sts	0x0147, r30	; 0x800147 <UART_RxHead>
 45a:	f0 e0       	ldi	r31, 0x00	; 0
 45c:	e6 5b       	subi	r30, 0xB6	; 182
 45e:	fe 4f       	sbci	r31, 0xFE	; 254
 460:	20 83       	st	Z, r18
 462:	01 c0       	rjmp	.+2      	; 0x466 <__vector_20+0x3e>
 464:	82 e0       	ldi	r24, 0x02	; 2
 466:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <UART_LastRxError>
 46a:	89 2b       	or	r24, r25
 46c:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <UART_LastRxError>
 470:	ff 91       	pop	r31
 472:	ef 91       	pop	r30
 474:	9f 91       	pop	r25
 476:	8f 91       	pop	r24
 478:	2f 91       	pop	r18
 47a:	0f 90       	pop	r0
 47c:	0f be       	out	0x3f, r0	; 63
 47e:	0f 90       	pop	r0
 480:	1f 90       	pop	r1
 482:	18 95       	reti

00000484 <__vector_21>:
 484:	1f 92       	push	r1
 486:	0f 92       	push	r0
 488:	0f b6       	in	r0, 0x3f	; 63
 48a:	0f 92       	push	r0
 48c:	11 24       	eor	r1, r1
 48e:	8f 93       	push	r24
 490:	9f 93       	push	r25
 492:	ef 93       	push	r30
 494:	ff 93       	push	r31
 496:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <UART_TxHead>
 49a:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <UART_TxTail>
 49e:	98 17       	cp	r25, r24
 4a0:	69 f0       	breq	.+26     	; 0x4bc <__vector_21+0x38>
 4a2:	e0 91 48 01 	lds	r30, 0x0148	; 0x800148 <UART_TxTail>
 4a6:	ef 5f       	subi	r30, 0xFF	; 255
 4a8:	ef 71       	andi	r30, 0x1F	; 31
 4aa:	e0 93 48 01 	sts	0x0148, r30	; 0x800148 <UART_TxTail>
 4ae:	f0 e0       	ldi	r31, 0x00	; 0
 4b0:	e6 59       	subi	r30, 0x96	; 150
 4b2:	fe 4f       	sbci	r31, 0xFE	; 254
 4b4:	80 81       	ld	r24, Z
 4b6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 4ba:	05 c0       	rjmp	.+10     	; 0x4c6 <__vector_21+0x42>
 4bc:	e1 ec       	ldi	r30, 0xC1	; 193
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	80 81       	ld	r24, Z
 4c2:	8f 7d       	andi	r24, 0xDF	; 223
 4c4:	80 83       	st	Z, r24
 4c6:	ff 91       	pop	r31
 4c8:	ef 91       	pop	r30
 4ca:	9f 91       	pop	r25
 4cc:	8f 91       	pop	r24
 4ce:	0f 90       	pop	r0
 4d0:	0f be       	out	0x3f, r0	; 63
 4d2:	0f 90       	pop	r0
 4d4:	1f 90       	pop	r1
 4d6:	18 95       	reti

000004d8 <__vector_28>:
 4d8:	1f 92       	push	r1
 4da:	0f 92       	push	r0
 4dc:	0f b6       	in	r0, 0x3f	; 63
 4de:	0f 92       	push	r0
 4e0:	11 24       	eor	r1, r1
 4e2:	2f 93       	push	r18
 4e4:	8f 93       	push	r24
 4e6:	9f 93       	push	r25
 4e8:	ef 93       	push	r30
 4ea:	ff 93       	push	r31
 4ec:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7f80c8>
 4f0:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
 4f4:	8c 71       	andi	r24, 0x1C	; 28
 4f6:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <UART1_RxHead>
 4fa:	ef 5f       	subi	r30, 0xFF	; 255
 4fc:	ef 71       	andi	r30, 0x1F	; 31
 4fe:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <UART1_RxTail>
 502:	e9 17       	cp	r30, r25
 504:	39 f0       	breq	.+14     	; 0x514 <__vector_28+0x3c>
 506:	e0 93 02 01 	sts	0x0102, r30	; 0x800102 <UART1_RxHead>
 50a:	f0 e0       	ldi	r31, 0x00	; 0
 50c:	eb 5f       	subi	r30, 0xFB	; 251
 50e:	fe 4f       	sbci	r31, 0xFE	; 254
 510:	20 83       	st	Z, r18
 512:	01 c0       	rjmp	.+2      	; 0x516 <__vector_28+0x3e>
 514:	82 e0       	ldi	r24, 0x02	; 2
 516:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 51a:	89 2b       	or	r24, r25
 51c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 520:	ff 91       	pop	r31
 522:	ef 91       	pop	r30
 524:	9f 91       	pop	r25
 526:	8f 91       	pop	r24
 528:	2f 91       	pop	r18
 52a:	0f 90       	pop	r0
 52c:	0f be       	out	0x3f, r0	; 63
 52e:	0f 90       	pop	r0
 530:	1f 90       	pop	r1
 532:	18 95       	reti

00000534 <__vector_29>:
 534:	1f 92       	push	r1
 536:	0f 92       	push	r0
 538:	0f b6       	in	r0, 0x3f	; 63
 53a:	0f 92       	push	r0
 53c:	11 24       	eor	r1, r1
 53e:	8f 93       	push	r24
 540:	9f 93       	push	r25
 542:	ef 93       	push	r30
 544:	ff 93       	push	r31
 546:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <UART1_TxHead>
 54a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <UART1_TxTail>
 54e:	98 17       	cp	r25, r24
 550:	69 f0       	breq	.+26     	; 0x56c <__vector_29+0x38>
 552:	e0 91 03 01 	lds	r30, 0x0103	; 0x800103 <UART1_TxTail>
 556:	ef 5f       	subi	r30, 0xFF	; 255
 558:	ef 71       	andi	r30, 0x1F	; 31
 55a:	e0 93 03 01 	sts	0x0103, r30	; 0x800103 <UART1_TxTail>
 55e:	f0 e0       	ldi	r31, 0x00	; 0
 560:	eb 5d       	subi	r30, 0xDB	; 219
 562:	fe 4f       	sbci	r31, 0xFE	; 254
 564:	80 81       	ld	r24, Z
 566:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
 56a:	05 c0       	rjmp	.+10     	; 0x576 <__vector_29+0x42>
 56c:	e9 ec       	ldi	r30, 0xC9	; 201
 56e:	f0 e0       	ldi	r31, 0x00	; 0
 570:	80 81       	ld	r24, Z
 572:	8f 7d       	andi	r24, 0xDF	; 223
 574:	80 83       	st	Z, r24
 576:	ff 91       	pop	r31
 578:	ef 91       	pop	r30
 57a:	9f 91       	pop	r25
 57c:	8f 91       	pop	r24
 57e:	0f 90       	pop	r0
 580:	0f be       	out	0x3f, r0	; 63
 582:	0f 90       	pop	r0
 584:	1f 90       	pop	r1
 586:	18 95       	reti

00000588 <__subsf3>:
 588:	50 58       	subi	r21, 0x80	; 128

0000058a <__addsf3>:
 58a:	bb 27       	eor	r27, r27
 58c:	aa 27       	eor	r26, r26
 58e:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__addsf3x>
 592:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__fp_round>
 596:	0e 94 a0 03 	call	0x740	; 0x740 <__fp_pscA>
 59a:	38 f0       	brcs	.+14     	; 0x5aa <__addsf3+0x20>
 59c:	0e 94 a7 03 	call	0x74e	; 0x74e <__fp_pscB>
 5a0:	20 f0       	brcs	.+8      	; 0x5aa <__addsf3+0x20>
 5a2:	39 f4       	brne	.+14     	; 0x5b2 <__addsf3+0x28>
 5a4:	9f 3f       	cpi	r25, 0xFF	; 255
 5a6:	19 f4       	brne	.+6      	; 0x5ae <__addsf3+0x24>
 5a8:	26 f4       	brtc	.+8      	; 0x5b2 <__addsf3+0x28>
 5aa:	0c 94 9d 03 	jmp	0x73a	; 0x73a <__fp_nan>
 5ae:	0e f4       	brtc	.+2      	; 0x5b2 <__addsf3+0x28>
 5b0:	e0 95       	com	r30
 5b2:	e7 fb       	bst	r30, 7
 5b4:	0c 94 97 03 	jmp	0x72e	; 0x72e <__fp_inf>

000005b8 <__addsf3x>:
 5b8:	e9 2f       	mov	r30, r25
 5ba:	0e 94 bf 03 	call	0x77e	; 0x77e <__fp_split3>
 5be:	58 f3       	brcs	.-42     	; 0x596 <__addsf3+0xc>
 5c0:	ba 17       	cp	r27, r26
 5c2:	62 07       	cpc	r22, r18
 5c4:	73 07       	cpc	r23, r19
 5c6:	84 07       	cpc	r24, r20
 5c8:	95 07       	cpc	r25, r21
 5ca:	20 f0       	brcs	.+8      	; 0x5d4 <__addsf3x+0x1c>
 5cc:	79 f4       	brne	.+30     	; 0x5ec <__addsf3x+0x34>
 5ce:	a6 f5       	brtc	.+104    	; 0x638 <__addsf3x+0x80>
 5d0:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <__fp_zero>
 5d4:	0e f4       	brtc	.+2      	; 0x5d8 <__addsf3x+0x20>
 5d6:	e0 95       	com	r30
 5d8:	0b 2e       	mov	r0, r27
 5da:	ba 2f       	mov	r27, r26
 5dc:	a0 2d       	mov	r26, r0
 5de:	0b 01       	movw	r0, r22
 5e0:	b9 01       	movw	r22, r18
 5e2:	90 01       	movw	r18, r0
 5e4:	0c 01       	movw	r0, r24
 5e6:	ca 01       	movw	r24, r20
 5e8:	a0 01       	movw	r20, r0
 5ea:	11 24       	eor	r1, r1
 5ec:	ff 27       	eor	r31, r31
 5ee:	59 1b       	sub	r21, r25
 5f0:	99 f0       	breq	.+38     	; 0x618 <__addsf3x+0x60>
 5f2:	59 3f       	cpi	r21, 0xF9	; 249
 5f4:	50 f4       	brcc	.+20     	; 0x60a <__addsf3x+0x52>
 5f6:	50 3e       	cpi	r21, 0xE0	; 224
 5f8:	68 f1       	brcs	.+90     	; 0x654 <__addsf3x+0x9c>
 5fa:	1a 16       	cp	r1, r26
 5fc:	f0 40       	sbci	r31, 0x00	; 0
 5fe:	a2 2f       	mov	r26, r18
 600:	23 2f       	mov	r18, r19
 602:	34 2f       	mov	r19, r20
 604:	44 27       	eor	r20, r20
 606:	58 5f       	subi	r21, 0xF8	; 248
 608:	f3 cf       	rjmp	.-26     	; 0x5f0 <__addsf3x+0x38>
 60a:	46 95       	lsr	r20
 60c:	37 95       	ror	r19
 60e:	27 95       	ror	r18
 610:	a7 95       	ror	r26
 612:	f0 40       	sbci	r31, 0x00	; 0
 614:	53 95       	inc	r21
 616:	c9 f7       	brne	.-14     	; 0x60a <__addsf3x+0x52>
 618:	7e f4       	brtc	.+30     	; 0x638 <__addsf3x+0x80>
 61a:	1f 16       	cp	r1, r31
 61c:	ba 0b       	sbc	r27, r26
 61e:	62 0b       	sbc	r22, r18
 620:	73 0b       	sbc	r23, r19
 622:	84 0b       	sbc	r24, r20
 624:	ba f0       	brmi	.+46     	; 0x654 <__addsf3x+0x9c>
 626:	91 50       	subi	r25, 0x01	; 1
 628:	a1 f0       	breq	.+40     	; 0x652 <__addsf3x+0x9a>
 62a:	ff 0f       	add	r31, r31
 62c:	bb 1f       	adc	r27, r27
 62e:	66 1f       	adc	r22, r22
 630:	77 1f       	adc	r23, r23
 632:	88 1f       	adc	r24, r24
 634:	c2 f7       	brpl	.-16     	; 0x626 <__addsf3x+0x6e>
 636:	0e c0       	rjmp	.+28     	; 0x654 <__addsf3x+0x9c>
 638:	ba 0f       	add	r27, r26
 63a:	62 1f       	adc	r22, r18
 63c:	73 1f       	adc	r23, r19
 63e:	84 1f       	adc	r24, r20
 640:	48 f4       	brcc	.+18     	; 0x654 <__addsf3x+0x9c>
 642:	87 95       	ror	r24
 644:	77 95       	ror	r23
 646:	67 95       	ror	r22
 648:	b7 95       	ror	r27
 64a:	f7 95       	ror	r31
 64c:	9e 3f       	cpi	r25, 0xFE	; 254
 64e:	08 f0       	brcs	.+2      	; 0x652 <__addsf3x+0x9a>
 650:	b0 cf       	rjmp	.-160    	; 0x5b2 <__addsf3+0x28>
 652:	93 95       	inc	r25
 654:	88 0f       	add	r24, r24
 656:	08 f0       	brcs	.+2      	; 0x65a <__addsf3x+0xa2>
 658:	99 27       	eor	r25, r25
 65a:	ee 0f       	add	r30, r30
 65c:	97 95       	ror	r25
 65e:	87 95       	ror	r24
 660:	08 95       	ret

00000662 <__cmpsf2>:
 662:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__fp_cmp>
 666:	08 f4       	brcc	.+2      	; 0x66a <__cmpsf2+0x8>
 668:	81 e0       	ldi	r24, 0x01	; 1
 66a:	08 95       	ret

0000066c <__floatunsisf>:
 66c:	e8 94       	clt
 66e:	09 c0       	rjmp	.+18     	; 0x682 <__floatsisf+0x12>

00000670 <__floatsisf>:
 670:	97 fb       	bst	r25, 7
 672:	3e f4       	brtc	.+14     	; 0x682 <__floatsisf+0x12>
 674:	90 95       	com	r25
 676:	80 95       	com	r24
 678:	70 95       	com	r23
 67a:	61 95       	neg	r22
 67c:	7f 4f       	sbci	r23, 0xFF	; 255
 67e:	8f 4f       	sbci	r24, 0xFF	; 255
 680:	9f 4f       	sbci	r25, 0xFF	; 255
 682:	99 23       	and	r25, r25
 684:	a9 f0       	breq	.+42     	; 0x6b0 <__floatsisf+0x40>
 686:	f9 2f       	mov	r31, r25
 688:	96 e9       	ldi	r25, 0x96	; 150
 68a:	bb 27       	eor	r27, r27
 68c:	93 95       	inc	r25
 68e:	f6 95       	lsr	r31
 690:	87 95       	ror	r24
 692:	77 95       	ror	r23
 694:	67 95       	ror	r22
 696:	b7 95       	ror	r27
 698:	f1 11       	cpse	r31, r1
 69a:	f8 cf       	rjmp	.-16     	; 0x68c <__floatsisf+0x1c>
 69c:	fa f4       	brpl	.+62     	; 0x6dc <__floatsisf+0x6c>
 69e:	bb 0f       	add	r27, r27
 6a0:	11 f4       	brne	.+4      	; 0x6a6 <__floatsisf+0x36>
 6a2:	60 ff       	sbrs	r22, 0
 6a4:	1b c0       	rjmp	.+54     	; 0x6dc <__floatsisf+0x6c>
 6a6:	6f 5f       	subi	r22, 0xFF	; 255
 6a8:	7f 4f       	sbci	r23, 0xFF	; 255
 6aa:	8f 4f       	sbci	r24, 0xFF	; 255
 6ac:	9f 4f       	sbci	r25, 0xFF	; 255
 6ae:	16 c0       	rjmp	.+44     	; 0x6dc <__floatsisf+0x6c>
 6b0:	88 23       	and	r24, r24
 6b2:	11 f0       	breq	.+4      	; 0x6b8 <__floatsisf+0x48>
 6b4:	96 e9       	ldi	r25, 0x96	; 150
 6b6:	11 c0       	rjmp	.+34     	; 0x6da <__floatsisf+0x6a>
 6b8:	77 23       	and	r23, r23
 6ba:	21 f0       	breq	.+8      	; 0x6c4 <__floatsisf+0x54>
 6bc:	9e e8       	ldi	r25, 0x8E	; 142
 6be:	87 2f       	mov	r24, r23
 6c0:	76 2f       	mov	r23, r22
 6c2:	05 c0       	rjmp	.+10     	; 0x6ce <__floatsisf+0x5e>
 6c4:	66 23       	and	r22, r22
 6c6:	71 f0       	breq	.+28     	; 0x6e4 <__floatsisf+0x74>
 6c8:	96 e8       	ldi	r25, 0x86	; 134
 6ca:	86 2f       	mov	r24, r22
 6cc:	70 e0       	ldi	r23, 0x00	; 0
 6ce:	60 e0       	ldi	r22, 0x00	; 0
 6d0:	2a f0       	brmi	.+10     	; 0x6dc <__floatsisf+0x6c>
 6d2:	9a 95       	dec	r25
 6d4:	66 0f       	add	r22, r22
 6d6:	77 1f       	adc	r23, r23
 6d8:	88 1f       	adc	r24, r24
 6da:	da f7       	brpl	.-10     	; 0x6d2 <__floatsisf+0x62>
 6dc:	88 0f       	add	r24, r24
 6de:	96 95       	lsr	r25
 6e0:	87 95       	ror	r24
 6e2:	97 f9       	bld	r25, 7
 6e4:	08 95       	ret

000006e6 <__fp_cmp>:
 6e6:	99 0f       	add	r25, r25
 6e8:	00 08       	sbc	r0, r0
 6ea:	55 0f       	add	r21, r21
 6ec:	aa 0b       	sbc	r26, r26
 6ee:	e0 e8       	ldi	r30, 0x80	; 128
 6f0:	fe ef       	ldi	r31, 0xFE	; 254
 6f2:	16 16       	cp	r1, r22
 6f4:	17 06       	cpc	r1, r23
 6f6:	e8 07       	cpc	r30, r24
 6f8:	f9 07       	cpc	r31, r25
 6fa:	c0 f0       	brcs	.+48     	; 0x72c <__fp_cmp+0x46>
 6fc:	12 16       	cp	r1, r18
 6fe:	13 06       	cpc	r1, r19
 700:	e4 07       	cpc	r30, r20
 702:	f5 07       	cpc	r31, r21
 704:	98 f0       	brcs	.+38     	; 0x72c <__fp_cmp+0x46>
 706:	62 1b       	sub	r22, r18
 708:	73 0b       	sbc	r23, r19
 70a:	84 0b       	sbc	r24, r20
 70c:	95 0b       	sbc	r25, r21
 70e:	39 f4       	brne	.+14     	; 0x71e <__fp_cmp+0x38>
 710:	0a 26       	eor	r0, r26
 712:	61 f0       	breq	.+24     	; 0x72c <__fp_cmp+0x46>
 714:	23 2b       	or	r18, r19
 716:	24 2b       	or	r18, r20
 718:	25 2b       	or	r18, r21
 71a:	21 f4       	brne	.+8      	; 0x724 <__fp_cmp+0x3e>
 71c:	08 95       	ret
 71e:	0a 26       	eor	r0, r26
 720:	09 f4       	brne	.+2      	; 0x724 <__fp_cmp+0x3e>
 722:	a1 40       	sbci	r26, 0x01	; 1
 724:	a6 95       	lsr	r26
 726:	8f ef       	ldi	r24, 0xFF	; 255
 728:	81 1d       	adc	r24, r1
 72a:	81 1d       	adc	r24, r1
 72c:	08 95       	ret

0000072e <__fp_inf>:
 72e:	97 f9       	bld	r25, 7
 730:	9f 67       	ori	r25, 0x7F	; 127
 732:	80 e8       	ldi	r24, 0x80	; 128
 734:	70 e0       	ldi	r23, 0x00	; 0
 736:	60 e0       	ldi	r22, 0x00	; 0
 738:	08 95       	ret

0000073a <__fp_nan>:
 73a:	9f ef       	ldi	r25, 0xFF	; 255
 73c:	80 ec       	ldi	r24, 0xC0	; 192
 73e:	08 95       	ret

00000740 <__fp_pscA>:
 740:	00 24       	eor	r0, r0
 742:	0a 94       	dec	r0
 744:	16 16       	cp	r1, r22
 746:	17 06       	cpc	r1, r23
 748:	18 06       	cpc	r1, r24
 74a:	09 06       	cpc	r0, r25
 74c:	08 95       	ret

0000074e <__fp_pscB>:
 74e:	00 24       	eor	r0, r0
 750:	0a 94       	dec	r0
 752:	12 16       	cp	r1, r18
 754:	13 06       	cpc	r1, r19
 756:	14 06       	cpc	r1, r20
 758:	05 06       	cpc	r0, r21
 75a:	08 95       	ret

0000075c <__fp_round>:
 75c:	09 2e       	mov	r0, r25
 75e:	03 94       	inc	r0
 760:	00 0c       	add	r0, r0
 762:	11 f4       	brne	.+4      	; 0x768 <__fp_round+0xc>
 764:	88 23       	and	r24, r24
 766:	52 f0       	brmi	.+20     	; 0x77c <__fp_round+0x20>
 768:	bb 0f       	add	r27, r27
 76a:	40 f4       	brcc	.+16     	; 0x77c <__fp_round+0x20>
 76c:	bf 2b       	or	r27, r31
 76e:	11 f4       	brne	.+4      	; 0x774 <__fp_round+0x18>
 770:	60 ff       	sbrs	r22, 0
 772:	04 c0       	rjmp	.+8      	; 0x77c <__fp_round+0x20>
 774:	6f 5f       	subi	r22, 0xFF	; 255
 776:	7f 4f       	sbci	r23, 0xFF	; 255
 778:	8f 4f       	sbci	r24, 0xFF	; 255
 77a:	9f 4f       	sbci	r25, 0xFF	; 255
 77c:	08 95       	ret

0000077e <__fp_split3>:
 77e:	57 fd       	sbrc	r21, 7
 780:	90 58       	subi	r25, 0x80	; 128
 782:	44 0f       	add	r20, r20
 784:	55 1f       	adc	r21, r21
 786:	59 f0       	breq	.+22     	; 0x79e <__fp_splitA+0x10>
 788:	5f 3f       	cpi	r21, 0xFF	; 255
 78a:	71 f0       	breq	.+28     	; 0x7a8 <__fp_splitA+0x1a>
 78c:	47 95       	ror	r20

0000078e <__fp_splitA>:
 78e:	88 0f       	add	r24, r24
 790:	97 fb       	bst	r25, 7
 792:	99 1f       	adc	r25, r25
 794:	61 f0       	breq	.+24     	; 0x7ae <__fp_splitA+0x20>
 796:	9f 3f       	cpi	r25, 0xFF	; 255
 798:	79 f0       	breq	.+30     	; 0x7b8 <__fp_splitA+0x2a>
 79a:	87 95       	ror	r24
 79c:	08 95       	ret
 79e:	12 16       	cp	r1, r18
 7a0:	13 06       	cpc	r1, r19
 7a2:	14 06       	cpc	r1, r20
 7a4:	55 1f       	adc	r21, r21
 7a6:	f2 cf       	rjmp	.-28     	; 0x78c <__fp_split3+0xe>
 7a8:	46 95       	lsr	r20
 7aa:	f1 df       	rcall	.-30     	; 0x78e <__fp_splitA>
 7ac:	08 c0       	rjmp	.+16     	; 0x7be <__fp_splitA+0x30>
 7ae:	16 16       	cp	r1, r22
 7b0:	17 06       	cpc	r1, r23
 7b2:	18 06       	cpc	r1, r24
 7b4:	99 1f       	adc	r25, r25
 7b6:	f1 cf       	rjmp	.-30     	; 0x79a <__fp_splitA+0xc>
 7b8:	86 95       	lsr	r24
 7ba:	71 05       	cpc	r23, r1
 7bc:	61 05       	cpc	r22, r1
 7be:	08 94       	sec
 7c0:	08 95       	ret

000007c2 <__fp_zero>:
 7c2:	e8 94       	clt

000007c4 <__fp_szero>:
 7c4:	bb 27       	eor	r27, r27
 7c6:	66 27       	eor	r22, r22
 7c8:	77 27       	eor	r23, r23
 7ca:	cb 01       	movw	r24, r22
 7cc:	97 f9       	bld	r25, 7
 7ce:	08 95       	ret

000007d0 <_exit>:
 7d0:	f8 94       	cli

000007d2 <__stop_program>:
 7d2:	ff cf       	rjmp	.-2      	; 0x7d2 <__stop_program>
